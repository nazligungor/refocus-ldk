/*
* ./src/Utils.js
*
* Some general helper functions
*/

const util = require('util');
const path = require('path');
const fs = require('fs-extra');
let subjects = new Map();
let aspects = new Map();
let samples = new Map();


module.exports = {

  /* Suggested data structure:
  *
  * Subjects
  * Samples
  * Aspects
  */

  processNode: function processNode(node) {
    subjects.set(node.absolutePath, node);
    if (node.samples) {
      node.samples.forEach((sample) => {
        sample.subjectId = node.id;
        sample.subjectAbsolutePath = node.absolutePath;
        samples.set(sample.name, sample);
        aspects.set(sample.aspect.name, sample.aspect);
      });
    }

    if (node.children) {
      node.children.forEach(processNode)
    }

    node.samples = samples;
    node.subjects = subjects;
    node.aspects = aspects;

    return node;
  },

  sortMap: function (map) {
    const sorted = new Map();
    const sortedKeys = Array.from(map.keys()).sort();
    sortedKeys.forEach((key) => sorted.set(key, map.get(key)));
    return sorted;
  },

};
