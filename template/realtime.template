/*
* ./src/RealtimeChangeHandler.js
*
* Handle each type of change by updating the data accordingly
*/

function onSampleAdd(sample) {
	console.log(new Date(), 'onSampleAdd', sample);

	//TODO implement me!
	//For example, you may need to preprocess and add this new sample to some
	//data structure.
 }

function onSampleRemove(sample) {
	console.log(new Date(), 'onSampleRemove', sample);
	// TODO implement me!
	// For example, you may need to preprocess and remove this sample from some
	// data structure.
}

function onSampleUpdate(change) {
	console.log(new Date(), 'onSampleUpdate', change);
	// TODO implement me!
	// For example, you may need to preprocess and update this sample in some
	// data structure.
}

function onSubjectAdd(subject) {
	console.log(new Date(), 'onSubjectAdd', subject);
	// TODO implement me!
	// For example, you may need to preprocess and add this new subject to some
	// data structure.
}

function onSubjectRemove(subject) {
	console.log(new Date(), 'onSubjectRemove', subject);
	// TODO implement me!
	// For example, you may need to preprocess and remove this subject from
	// some data structure.
}

function onSubjectUpdate(change) {
	console.log(new Date(), 'onSubjectUpdate', change);
	// TODO implement me!
	// For example, you may need to preprocess and update this subject in some
	// data structure.
}

module.exports = {
	handle: function (chg) {
		if (chg['sample.add']) {
          onSampleAdd(chg['sample.add'])
        } else if (chg['sample.remove']) {
          onSampleRemove(chg['sample.remove'])
        } else if (chg['sample.update']) {
          onSampleUpdate(chg['sample.update']);
        } else if (chg['subject.add']) {
          onSubjectAdd(chg['subject.add'])
        } else if (chg['subject.remove']) {
          onSubjectRemove(chg['subject.remove'])
        } else if (chg['subject.update']) {
          onSubjectUpdate(chg['subject.update'])
        }
	},
};
